// File: CORBA_Object.idl
// CORBA 2.3, Chapter 4

module CORBA {

//typedef string Identifier;
interface InterfaceDef;

#import "CORBA_Policy.idl"
#import "CORBA_DomainManager.idl"

    //PIDL
    struct NamedValue { 
        Identifier      name;       // argument name
        any             argument;   // argument
        long            len;        // length/count of argument value
        Flags           arg_modes;  // argument mode flags
    };

    enum SetOverrideType {SET_OVERRIDE, ADD_OVERRIDE};
    exception InvalidPolicies { sequence <unsigned short> indices; };
    
    interface Object {                  // PIDL

        //InterfaceDef get_interface ();
        InterfaceDef __interface ();

        boolean is_nil();

        Object duplicate ();

        void release ();

        //boolean is_a (in string logical_type_id);

        boolean __is_a (
            in string               logical_type_id
        );
        //boolean non_existent();
        boolean __non_existent();

        boolean is_equivalent (
            in Object               other_object
        );

        unsigned long hash(
            in unsigned long        maximum
        );

        void create_request (           
            in    Context           ctx,
            in    Identifier        operation,
            in    NVList            arg_list,
            inout NamedValue        result,
            out   Request           request,
            in    Flags             req_flag
        );

        Policy get_policy (
            in PolicyType           policy_type
        );

        DomainManagersList get_domain_managers ();
        DomainManagersList __domain_managers ();

        Object set_policy_overrides(
            in PolicyList           policies,
            in SetOverrideType      set_add
        )raises (InvalidPolicies);
        
        Policy get_client_policy(in PolicyType type);
        PolicyList get_policy_overrides(in PolicyTypeSeq types);
        boolean validate_connection(out PolicyList inconsistent_policies);
    };
};
